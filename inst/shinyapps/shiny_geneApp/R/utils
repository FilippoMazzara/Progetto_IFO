### TOOLTIPS
lo span cambia la posizione
<span data-toggle="tooltip" style="float:right" data-placement="right" title="" data-original-title="A tooltip">
  <i class="far fa-circle-question" role="presentation" aria-label="circle-question icon"></i>
</span>
altro modo
span(
  style="float:right;margin-right:5%;margin-top:2%;",
  `data-toggle` = "tooltip", `data-placement` = "left",
  title = "A tooltip",
  icon("question-circle")
)
###helptext panel
help_text_panel <- tagList(
  wellPanel(
    HTML("<label>Text menu: <i id='help_text_all' title='Check all' href='#' class='action-button glyphicon glyphicon-ok'></i>
    <i id='help_text_none' title='Uncheck all' href='#' class='action-button glyphicon glyphicon-remove'></i></label>"),
    checkboxGroupInput("help_text", NULL, help_text,
                       selected = state_group("help_text"), inline = TRUE)
  )
)

#shinyjs::onclick(id= "toggle_well_input", { #aggiungi visibility
   # shinyjs::runjs('var z = document.getElementById("well_input");
    #                if (z.style.height == "0px") {z.style.height="100px";} else {z.style.height="0px";}
     #               ')})



#d <- data.table::fread(input$fromfile$datapath, data.table=F)
        #save(d,file = paste(input$fromfile$name,".RData",sep=""))
        f <- get(load("maf_test.tsv.RData"))
        data.table::setDT(f)

data <- shiny::eventReactive({
        shiny::req(shiny::isTruthy(input$fromfile) || shiny::isTruthy(input$dataset_files), cancelOutput = TRUE)
        if (shiny::isTruthy(input$fromfile))
          {data.table::fread(shiny::isolate(input$fromfile$datapath), data.table=T)}
        else if (shiny::isTruthy(input$dataset_files)) {
          shinyFiles::shinyFileChoose(input = input, id = "dataset_files", session = session, roots=c(wd = "C:/Users/facke/Desktop/datasets"), defaultPath="/")
          inFile <- shinyFiles::parseFilePaths(roots=c(wd="C:/Users/facke/Desktop/datasets"),shiny::isolate( input$dataset_files))
          if (length(inFile$datapath) != 0 ){
          data.table::fread(as.character(inFile$datapath), data.table=T)}}
      })
datax <- shiny::reactive({
        shiny::req(shiny::isTruthy(input$fromfile) || shiny::isTruthy(input$dataset_files))
        print(input$fromfile)
        print(input$dataset_files)
        if (shiny::isTruthy(input$fromfile))
        {data.table::fread(input$fromfile$datapath, data.table=T)}
        else if (shiny::isTruthy(input$dataset_files)) {
          shinyFiles::shinyFileChoose(input = input, id = "dataset_files", session = session, roots=c(wd = "C:/Users/facke/Desktop/datasets"), defaultPath="/")
          inFile <- shinyFiles::parseFilePaths(roots=c(wd="C:/Users/facke/Desktop/datasets"), input$dataset_files)
          if (length(inFile$datapath) != 0 ){
            data.table::fread(as.character(inFile$datapath), data.table=T)}}
      })
